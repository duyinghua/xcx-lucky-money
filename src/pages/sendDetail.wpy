<template>
    <view class="sendDetail-page container">
        <view class="amount-area">
            <view>￥{{totalFee}}</view>

            <view class="ctrl {{serviveCard.shared===1?'':'ctrl2'}}">
                <button plain="true" class="li" @tap="extractHandler">
                    <image class="icon" src="../img/icon-tixian.png"></image>
                    提现
                </button>
                <button plain="true" class="li" @tap="createHandler">
                    <image class="icon" src="../img/icon-hongbao.png"></image>
                    我要出题
                </button>
                <button plain="true" class="li" @tap="shareRedPack">
                    <image class="icon" src="../img/icon-fenxiang.png"></image>
                    分享
                </button>
            </view>
        </view>
        <view class="desc">
            <view class="txt">
                已被
                <view class="red">{{totalCount}}</view>
                位好友领取
                <view class="red">{{sendedFee}}</view>
                元
            </view>
            <view class="explain" tap="explain">
                <image class="icon" src="../img/icon-wh.png"></image>
                玩法说明
            </view>
        </view>
        <view class="list">
            <view class="li {{maxFee==item.receiveFee?'light':''}}" wx:for="{{detailList}}" wx:for-item="item" wx:for-index="index" wx:key="{{item.index}}">
                <view class="photo">
                    <image class="img" mode="widthFix" src="{{item.headPicURL}}"></image>
                </view>
                <view class="info">
                    <view class="row">
                        <view class="name">{{item.userName}}</view>
                        <view class="amount">￥{{item.receiveFee}}</view>
                    </view>
                    <view class="row">
                        <view class="level">亲密值{{item.intimacy}}分</view>
                        <view class="datetime">{{item.createTime}}</view>
                    </view>
                </view>
            </view>
        </view>
    </view>
</template>
<script>
    import wepy from 'wepy'
    import {http, apis} from '../lib/inter.js'
    import utils from '../lib/utils.js'

    export default class SendDetail extends wepy.page {
        config = {
            backgroundColor: '#CD3434',
            backgroundTextStyle: 'light',
            navigationBarTitleText: '冲顶超人',
            enablePullDownRefresh: true,
        }
        data = {
            id: 0,
            totalFee: 0,
            sendedFee: 0,
            totalCount: 0,
            maxFee: 0,
            detailList: [],
            isLast: false
        }
        methods = {
            explain(){
                wx.navigateTo({
                    url: 'qa'
                })
            },
            extractHandler(){
                wx.switchTab({
                    url: 'extract'
                })
            },
            createHandler(){
                wx.switchTab({
                    url: 'index'
                })
            },
            shareRedPack(){
                wx.navigateTo({
                    url: `shareRedPack?id=${this.id}&amount=${this.totalFee}&count=${this.totalCount}`
                })
            }
        }

        async getSendDetail(init) {
            if (init) {
                this.detailList = [];
                this.isLast = false;
            }
            if (!this.isLast) {
                let res = await http.post(apis.sendDetailList, {
                    redPackageID: this.id,
                    beginIndex: this.detailList.length
                })
                if (res._ok) {
                    if (init) {
                        this.totalFee = isNaN(res.totalFee) ? '0.00' : Number(res.totalFee).toFixed(2);
                        this.sendedFee = isNaN(res.sendedFee) ? '0.00' : Number(res.sendedFee).toFixed(2);
                        this.totalCount = res.totalCount;
                        this.maxFee = res.maxRedpackageFee;
                    }
                    if (res.detailList.length) {
                        this.detailList = this.detailList.concat(res.detailList);
                    } else {
                        this.isLast = true;
                    }
                    this.$apply();
                }
            }
            init && wx.stopPullDownRefresh();
        }

        onLoad(e) {
            this.id = e.id;
            this.getSendDetail(true);
        }

        onPullDownRefresh() {
            this.getSendDetail(true);
        }

        onReachBottom() {
            this.getSendDetail();
        }

        onShareAppMessage() {
            let rand = parseInt(Math.random() * 3) + 1;
            return {
                title: wepy.$instance.globalData.shareInfo[rand],
                path: `pages/redpackStart?id=${this.id}`,
                imageUrl: `../img/share-title${rand}.png`
            }
        }
    }

</script>
<style lang="less" rel="stylesheet/less">
    .sendDetail-page {
        .amount-area {
            display: flex;
            align-items: center;
            justify-content: center;
            height: unit(255, rpx);
            background: #CD3434;
            color: #FFF;
            font-size: unit(64, rpx);
            font-weight: bold;
            flex-direction: column;

            .ctrl {
                display: flex;
                align-items: center;
                justify-content: space-between;
                margin: unit(30, rpx) 0;
                width: unit(558, rpx);
                .li {
                    color: #F2F2F2;
                    font-weight: normal;
                    display: flex;
                    align-items: center;
                    margin: 0;
                    padding: 0;
                    font-size: unit(30, rpx);
                    line-height: normal;
                    .icon {
                        width: unit(32, rpx);
                        height: unit(32, rpx);
                        margin-right: unit(8, rpx);
                    }
                }
            }
        }
        .desc {
            display: flex;
            justify-content: space-between;
            height: unit(96, rpx);
            line-height: unit(96, rpx);
            padding: 0 unit(32, rpx);
            .txt {
                width: unit(520, rpx);
                font-size: unit(26, rpx);
                .red {
                    display: inline-block;
                    color: #CD3434;
                }
            }
            .explain {
                display: flex;
                align-items: center;
                color: #CD3434;
                font-size: unit(26, rpx);
                .icon {
                    width: unit(26, rpx);
                    height: unit(26, rpx);
                    margin-right: unit(8, rpx);
                }
            }
        }
        .list {
            .li {
                display: flex;
                align-items: center;
                background: #FFF;
                margin-bottom: unit(16, rpx);
                padding: unit(26, rpx) unit(32, rpx);
                .photo {
                    width: unit(100, rpx);
                    height: unit(100, rpx);
                    border-radius: unit(6, rpx);
                    background: #EEE;
                    margin-right: unit(26, rpx);
                    overflow: hidden;
                    .img {
                        width: 100%;
                        height: 100%;
                    }
                }
                .info {
                    flex: 1;
                    width: unit(200, rpx);
                    .row {
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        margin-top: unit(12, rpx);
                        &:first-child {
                            margin-top: 0;
                        }
                        .name {
                            font-size: unit(26, rpx);
                        }
                        .amount {
                            font-size: unit(28, rpx);
                            font-weight: bold;
                        }
                        .level {
                            color: #A5A5A5;
                            font-size: unit(24, rpx);
                        }
                        .datetime {
                            color: #A5A5A5;
                            font-size: unit(24, rpx);
                        }
                    }

                }
                &.light {
                    .amount {
                        color: #CD3434;
                    }
                }
            }

        }
    }
</style>

