<template>
    <view class="record-page container">
        <view class="tab">
            <view class="item {{curTab==1?'cur':''}}" @tap="tabHandler(1)">我发出的</view>
            <view class="item {{curTab==2?'cur':''}}" @tap="tabHandler(2)">我抢到的</view>
        </view>
        <view hidden="{{curTab!=1}}" class="send-record">
            <view class="overview">
                <view class="item">
                    <view class="label">金额(元)</view>
                    <view class="value">{{sendTotalFee}}</view>
                </view>
                <view class="item">
                    <view class="label">数量(个)</view>
                    <view class="value">{{sendTotalCount}}</view>
                </view>
            </view>
            <view class="list">
                <view class="li" wx:for="{{sendList}}" wx:for-item="item" wx:for-index="index" wx:key="send_{{index}}"
                      @tap="sendDetail({{item.id}})">
                    <view class="label">金额(元)</view>
                    <view class="l1">
                        <view class="amount">{{item.redPackageFee}}</view>
                        <view class="right">
                            <view class="num">{{item.questionCount}}道题</view>
                            <view class="level">{{item.correctRate}}%答对率</view>
                        </view>
                    </view>
                    <view class="l2">
                        <view class="left">{{item.createTime}}</view>
                        <view class="right">{{item.userCount}}人参与</view>
                    </view>
                </view>
            </view>
        </view>
        <view hidden="{{curTab!=2}}" class="receive-record">
            <view class="overview">
                <view class="item">
                    <view class="label">金额(元)</view>
                    <view class="value">{{receiveTotalFee}}</view>
                </view>
                <view class="item">
                    <view class="label">数量(个)</view>
                    <view class="value">{{receiveTotalCount}}</view>
                </view>
            </view>
            <view class="list">
                <view class="li" wx:for="{{receiveList}}" wx:for-item="item" wx:for-index="index"
                      wx:key="receive_{{index}}" @tap="receiveDetail({{item.redPackageID}})">
                    <view class="amount">￥{{item.fee}}</view>
                    <view class="date">{{item.createTime}}</view>
                </view>
            </view>
        </view>
    </view>
</template>
<script>
    import wepy from 'wepy'
    import {http, apis} from '../lib/inter.js'
    import utils from '../lib/utils.js'

    export default class Record extends wepy.page {
        config = {
            navigationBarTitleText: '冲顶超人',
            enablePullDownRefresh: true
        }
        data = {
            curTab: 1,
            sendTotalFee: 0,
            sendTotalCount: 0,
            sendList: [],
            isLastSend: false,
            receiveTotalFee: 0,
            receiveTotalCount: 0,
            receiveList: [],
            isLastReceive: false
        }
        methods = {
            tabHandler(num){
                this.curTab = num;
                this.$apply()
            },
            sendDetail(id){
                wx.navigateTo({
                    url: 'sendDetail?id=' + id
                })
            },
            receiveDetail(id){
                wx.navigateTo({
                    url: 'redpackResult?id=' + id
                })
            }
        }

        async getSendList(init) {
            if (init) {
                this.sendList = [];
                this.isLastSend = false;
            }
            if (!this.isLastSend) {
                let res = await http.post(apis.sendList, {
                    beginIndex: this.sendList.length
                });
                if (res._ok) {
                    if (init) {
                        this.sendTotalFee = isNaN(res.totalFee) ? '0.00' : Number(res.totalFee).toFixed(2);
                        this.sendTotalCount = res.totalCount;
                    }
                    if (res.sendList.length) {
                        res.sendList.forEach(item => {
                            item.redPackageFee = isNaN(item.redPackageFee) ? '0.00' : Number(item.redPackageFee).toFixed(2);
                        })
                        this.sendList = this.sendList.concat(res.sendList);
                    } else {
                        this.isLastSend = true;
                    }
                    this.$apply();
                }
            }
            init && wx.stopPullDownRefresh();
        }

        async getReceiveList(init) {
            if (init) {
                this.receiveList = [];
                this.isLastReceive = false;
            }
            if (!this.isLastReceive) {
                let res = await http.post(apis.receiveList, {
                    beginIndex: this.receiveList.length
                });
                if (res._ok) {
                    if (init) {
                        this.receiveTotalFee = isNaN(res.totalFee) ? '0.00' : Number(res.totalFee).toFixed(2);
                        this.receiveTotalCount = res.totalCount;
                    }
                    if (res.receiveList.length) {
                        res.receiveList.forEach(item => {
                            item.fee = isNaN(item.fee) ? '0.00' : Number(item.fee).toFixed(2);
                        })
                        this.receiveList = this.receiveList.concat(res.receiveList);
                    } else {
                        this.isLastReceive = true;
                    }
                    this.$apply();
                }
            }
            init && wx.stopPullDownRefresh();
        }

        onLoad() {
            this.getSendList(true);
            this.getReceiveList(true);
        }

        onPullDownRefresh() {
            if (this.curTab == 1) {
                this.getSendList(true);
            } else {
                this.getReceiveList(true);
            }
        }

        onReachBottom() {
            if (this.curTab == 1) {
                this.getSendList();
            } else {
                this.getReceiveList();
            }
        }

        onShareAppMessage() {
            let rand = parseInt(Math.random() * 3) + 1;
            return {
                title: wepy.$instance.globalData.shareInfo[rand],
                path: 'pages/index',
                imageUrl: `../img/share-title${rand}.png`
            }
        }
    }

</script>
<style lang="less" rel="stylesheet/less">
    .record-page {
        .tab {
            display: flex;
            justify-content: space-between;
            height: unit(96, rpx);
            line-height: unit(96, rpx);
            padding: 0 unit(96, rpx);
            background: #FFF;
            .item {
                margin: 0 unit(45, rpx);
                font-size: unit(32, rpx);
                box-sizing: border-box;
                color: #A5A5A5;
                &.cur {
                    color: #CD3434;
                    border-bottom: unit(4, rpx) solid #CD3434;
                }
            }
        }
        .overview {
            display: flex;
            justify-content: space-between;
            height: unit(96, rpx);
            line-height: unit(96, rpx);
            padding: 0 unit(70, rpx);
            .item {
                display: flex;
                .label {
                    color: #BFBFBF;
                    font-size: unit(26, rpx);
                    margin-right: unit(24, rpx);
                }
                .value {
                    font-size: unit(36, rpx);
                }
            }
        }
        .send-record {
            .list {
                .li {
                    background: #FFF;
                    margin-bottom: unit(16, rpx);
                    padding: unit(26, rpx) unit(96, rpx);
                    .label {
                        color: #BFBFBF;
                        font-size: unit(26, rpx);
                    }
                    .l1 {
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        height: unit(70, rpx);
                        margin-top: unit(10, rpx);
                        .amount {
                            text-align: left;
                            color: #CD3434;
                            font-size: unit(36, rpx);
                            font-weight: bold;
                        }
                        .right {
                            text-align: right;
                            .num {
                                font-size: unit(26, rpx);
                            }
                            .level {
                                font-size: unit(24, rpx);
                                color: #BFBFBF;
                            }
                        }
                    }
                    .l2 {
                        display: flex;
                        justify-content: space-between;
                        align-items: center;
                        margin-top: unit(10, rpx);
                        height: unit(24, rpx);
                        .left {
                            text-align: left;
                            color: #BFBFBF;
                            font-size: unit(20, rpx);
                        }
                        .right {
                            text-align: right;
                            color: #BFBFBF;
                            font-size: unit(20, rpx);
                        }
                    }
                }

            }
        }
        .receive-record {
            .list {
                .li {
                    background: #FFF;
                    margin-bottom: unit(16, rpx);
                    padding: unit(22, rpx) unit(96, rpx);
                    display: flex;
                    align-items: center;
                    justify-content: space-between;
                    .amount {
                        color: #CD3434;
                        font-size: unit(36, rpx);
                        font-weight: bold;
                    }
                    .date {
                        color: #BFBFBF;
                        font-size: unit(24, rpx);
                    }
                }
            }
        }
    }
</style>

