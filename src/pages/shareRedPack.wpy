<template>
    <view class="shareRedPack-page container">
        <view class="main">
            <block wx:if="{{type==1}}">
                <image class="title" src="../img/redpack-title.png"></image>
                <view class="info">
                    <view class="count">{{count}}道题</view>
                    <view class="amount">
                        <text class="value">{{amount}}</text>
                        元
                    </view>
                    <view class="desc">
                        第1名冲顶好友拿走一半奖金
                    </view>
                </view>
            </block>
            <block wx:elif="{{type==2}}">
                <view class="message">
                    <text wx:if="{{msg}}" class="p">“{{msg}}”</text>
                </view>
                <view class="info">
                    <view class="count">{{count}}道题，一起瓜分</view>
                    <view class="amount">
                        <text class="value">{{amount}}</text>
                        元
                    </view>
                </view>
            </block>
            <block wx:elif="{{type==3}}">
                <view class="message">
                    <text class="p">情侣心跳测试</text>
                </view>
                <view class="info">
                    <view class="count">{{count}}道题</view>
                    <view class="amount">
                        <text class="value">{{amount}}</text>
                        元
                    </view>
                </view>
            </block>
            <view class="qrcode">
                <image class="bg" src="../img/redpack-qrcode-box.png"></image>
                <image class="img" src="{{qrcode}}"></image>
            </view>
            <view class="link-home" @tap="backhome">返回首页</view>
            <view class="buttons">
                <button plain="true" class="button" open-type="share">
                    <image class="img" src="../img/redpack-btn-friend.png"></image>
                </button>
                <button plain="true" class="button" @tap="shareTimeline">
                    <image class="img" src="../img/redpack-btn-timeline.png"></image>
                </button>
            </view>
            <view class="redpack-sprite rs1" animation="{{redpackAnimation.ra1}}">
                <image class="img " src="../img/redpack-sprite.png"></image>
            </view>
            <view class="redpack-sprite rs2" animation="{{redpackAnimation.ra2}}">
                <image class="img " src="../img/redpack-sprite.png"></image>
            </view>
            <view class="redpack-sprite rs3" animation="{{redpackAnimation.ra3}}">
                <image class="img " src="../img/redpack-sprite.png"></image>
            </view>
            <view class="redpack-sprite rs4" animation="{{redpackAnimation.ra4}}">
                <image class="img " src="../img/redpack-sprite.png"></image>
            </view>
            <view class="redpack-sprite rs5" animation="{{redpackAnimation.ra5}}">
                <image class="img " src="../img/redpack-sprite.png"></image>
            </view>
            <view class="redpack-sprite rs6" animation="{{redpackAnimation.ra6}}">
                <image class="img " src="../img/redpack-sprite.png"></image>
            </view>


            <canvas class="share-canvas" canvas-id="shareCanvas"></canvas>
        </view>
    </view>
</template>

<script>
    import wepy from 'wepy'
    import {http, apis} from '../lib/inter.js'
    import utils from '../lib/utils.js'
    import DrawCanvas from '../lib/drawCanvas.js'


    export default class ShareRedPack extends wepy.page {
        config = {
            navigationBarBackgroundColor: '#D43D3D',
            backgroundColor: '#D43D3D',
        }
        data = {
            amount: 0,
            count: 0,
            type: 0,
            msg: '',
            qrcode: '',
            redpackAnimation: {
                ra1: {},
                ra2: {},
                ra3: {},
                ra4: {},
                ra5: {},
                ra6: {}
            }
        }

        methods = {
            backhome(){
                wx.switchTab({
                    url: 'index'
                })
            },
            shareTimeline(){
//                if (this.qrcode) {
                this.clearCanvas();
                this.saveShareImage();
//                }
            }
        }

        clearCanvas() {
            const ctx = wx.createCanvasContext('shareCanvas')
            ctx.clearRect(0, 0, 320, 469);
            ctx.draw();
        }

        async saveShareImage() {
            wx.showLoading({
                title: '图片生成中',
                mask: true
            })
            let qrcodeImage;
            try {
                qrcodeImage = await wepy.downloadFile({url: this.qrcode})
            } catch (e) {
                wx.hideLoading();
                wx.showModal({
                    content: '二维码生成异常',
                    showCancel: false,
                })
                return;
            }
            const ctx = wx.createCanvasContext('shareCanvas')
            let yOffset = 0;
            const halfX = 160;
            ctx.setTextBaseline('top')
            //  绘制背景
            if (this.type == 1) {
                ctx.drawImage('../img/share-redpack.png', 0, 0, 320, 469);
            } else if (this.type == 2) {
                ctx.drawImage('../img/share-redpack-square.png', 0, 0, 320, 469);
                if (this.msg) {
                    ctx.setFillStyle('#ffffff')
                    ctx.setFontSize(20)
                    ctx.setTextAlign('center')
                    let msgHeight = DrawCanvas.drawText(ctx, DrawCanvas.replaceEmoji(this.msg), halfX, 18, 10, 26);
                    yOffset += msgHeight;
                    yOffset -= 30;
                }
            }
            //  绘制题数
            yOffset += 82;   //间距
            ctx.setFillStyle('#ffffff')
            ctx.setFontSize(16)//24 64
            ctx.setTextAlign('center')
            let countText = ''
            if (this.type == 1) {
                countText = this.count + '道题';
            } else if (this.type == 2) {
                countText = this.count + '道题，一起瓜分';
            }
            ctx.fillText(countText, halfX, yOffset);
            yOffset += 20;  //元素高度
            //  绘制金额
            yOffset += 4;   //间距
            /*this.amount = '6.66'
             ctx.setFillStyle('#ffffff');
             let numberWidth = 40;
             let amountWidth = this.amount.length * numberWidth + 24;
             ctx.setTextAlign('left')
             ctx.setFontSize(64)
             ctx.fillText(this.amount, halfX - amountWidth / 2, yOffset);
             ctx.setFontSize(24)
             ctx.fillText('元', halfX - amountWidth / 2 + this.amount.length * numberWidth, yOffset + 40);*/
            ctx.setFontSize(64)
            ctx.fillText('￥' + this.amount, halfX, yOffset);
            yOffset += 64;   //元素高度
            if (this.type == 1) {
                //  绘制说明
                yOffset += 15;   //间距
                ctx.setFillStyle('#ffffff')
                ctx.setFontSize(16)
                ctx.setTextAlign('center')
                ctx.fillText('第1名冲顶好友拿走一半奖金', halfX, yOffset);
                yOffset += 20;  //元素高度
            }
            //  绘制二维码
            yOffset += 15;   //间距
            let qrcodeY = 243;
            ctx.save()
            ctx.beginPath()
            ctx.arc(halfX, qrcodeY + 55, 55, 0, 2 * Math.PI)
            ctx.closePath();
            ctx.clip();
            ctx.drawImage(qrcodeImage.tempFilePath, halfX - 50, qrcodeY + 5, 100, 100);
            ctx.restore();
            ctx.draw();
            DrawCanvas.canvasToSave('shareCanvas');
        }

        async getQrCode() {
            let res = await http.post(apis.wxQrCode, {
                redPackageID: this.id,
                scene: this.id,
                page: 'pages/redpackStart',//pages/goodsDetail
                width: 396,
                auto_color: false,
                line_color: JSON.stringify({r: 0, g: 0, b: 0})
            })
            if (res._ok) {
                this.qrcode = res._result;
                this.$apply();
            }
        }

        async showAnimation() {
            let animation1 = wx.createAnimation({
                timingFunction: 'ease',
                duration: 2000,
                delay: 1000
            })
            let animation2 = wx.createAnimation({
                timingFunction: 'ease',
                duration: 2000,
                delay: 1200
            })
            let animation3 = wx.createAnimation({
                timingFunction: 'ease',
                duration: 2000,
                delay: 800
            })
            let animation4 = wx.createAnimation({
                timingFunction: 'ease',
                duration: 2000,
                delay: 1500
            })
            let animation5 = wx.createAnimation({
                timingFunction: 'ease',
                duration: 2000,
                delay: 1600
            })
            let animation6 = wx.createAnimation({
                timingFunction: 'ease',
                duration: 2000,
                delay: 900
            })
            animation1.opacity(0.5).translate(0, 0).step();
            animation2.opacity(0.5).translate(0, 0).step();
            animation3.opacity(0.5).translate(0, 0).step();
            animation4.opacity(0.5).translate(0, 0).step();
            animation5.opacity(0.5).translate(0, 0).step();
            animation6.opacity(0.5).translate(0, 0).step();
            this.redpackAnimation.ra1 = animation1.export();
            this.redpackAnimation.ra2 = animation2.export();
            this.redpackAnimation.ra3 = animation3.export();
            this.redpackAnimation.ra4 = animation4.export();
            this.redpackAnimation.ra5 = animation5.export();
            this.redpackAnimation.ra6 = animation6.export();
            this.$apply();
        }

        onLoad(e) {
            this.id = e.id;
            this.amount = e.amount;
            this.count = e.count;
            this.type = e.type || 1;
            this.msg = e.msg || '';
            this.$apply();
            this.getQrCode();
//            this.saveShareImage();
        }

        onShow() {
            this.showAnimation();
        }

        onShareAppMessage() {
            let title;
            if (this.type == 1) {
                title = wepy.$instance.globalData.shareInfo[0];
            } else if (this.type == 2) {
                title = this.msg
            }
            return {
                title: title,
                path: `pages/redpackStart?id=${this.id}`,
            }
        }
    }
</script>

<style lang="less" rel="stylesheet/less">
    .shareRedPack-page {
        .main {
            flex: 1;
            position: relative;
            background: url('http://redpackagelite.static.immocha.com/wxlite/redpack-bg.jpg') no-repeat center top / cover;
            box-sizing: border-box;
            color: #FFF;
            padding: 0 unit(96, rpx);
            overflow: hidden;
            .title {
                display: block;
                width: unit(256, rpx);
                height: unit(119, rpx);
                margin: unit(66, rpx) auto 0;
            }
            .message {
                display: flex;
                margin: unit(66, rpx) auto 0;
                min-height: unit(140, rpx);
                align-items: center;
                justify-content: center;
                .p {
                    display: inline-block;
                    text-align: justify;
                    font-size: unit(48, rpx);
                }
            }
            .info {
                text-align: center;
                margin-top: unit(45, rpx);
                height: unit(264, rpx);
                .count {
                    font-size: unit(32, rpx);
                }
                .amount {
                    font-size: unit(48, rpx);
                    .value {
                        font-size: unit(128, rpx);
                        font-weight: bold;
                    }
                }
                .desc {
                    font-size: unit(40, rpx);
                }
            }
            .qrcode {
                position: relative;
                z-index: 2;
                width: unit(275, rpx);
                height: unit(278, rpx);
                margin: unit(90, rpx) auto 0;
                .bg {
                    position: absolute;
                    left: 0;
                    top: 0;
                    width: unit(275, rpx);
                    height: unit(278, rpx);
                }
                .img {
                    position: absolute;
                    left: unit(14, rpx);
                    top: unit(14, rpx);
                    z-index: 1;
                    width: unit(240, rpx);
                    height: unit(240, rpx);
                    border-radius: unit(100, rpx);
                }
            }
            .link-home {
                position: relative;
                z-index: 1;
                margin-top: unit(100, rpx);
                font-size: unit(28, rpx);
                text-align: center;
                color: #FFF;
                line-height: unit(40, rpx);
            }
            .buttons {
                margin-top: unit(36, rpx);
                display: flex;
                justify-content: space-between;
                .button {
                    width: unit(272, rpx);
                    height: unit(98, rpx);
                    padding: 0;
                    margin: 0;

                    .img {
                        width: unit(272, rpx);
                        height: unit(98, rpx);
                    }
                }
            }
            .redpack-sprite {
                position: absolute;
                transform: translate(0, 200%);
                width: unit(56, rpx);
                height: unit(60, rpx);
                opacity: 0;
                &.rs1 {
                    top: unit(780, rpx);
                    left: unit(-30, rpx);
                }
                &.rs2 {
                    top: unit(1096, rpx);
                    left: unit(24, rpx);
                }
                &.rs3 {
                    top: unit(880, rpx);
                    left: unit(120, rpx);
                }
                &.rs4 {
                    top: unit(1168, rpx);
                    left: unit(390, rpx);
                }
                &.rs5 {
                    top: unit(840, rpx);
                    left: unit(438, rpx);
                }
                &.rs6 {
                    top: unit(888, rpx);
                    left: unit(716, rpx);
                }
                .img {
                    width: 100%;
                    height: 100%;
                }
            }

            .share-canvas {
                position: absolute;
                width: 320px;
                height: 469px;
                top: -9999px;
            }
        }
    }
</style>
