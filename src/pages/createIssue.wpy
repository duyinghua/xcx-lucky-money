<template>
    <view class="createIssue-page container">
        <scroll-view class="iss-index" scroll-x="true">
            <view class="li" wx:for="{{indexs}}" wx:for-item="index_item" wx:for-index="index_i" wx:key="{{index_i}}">
                <view class="num {{index_item<curIssIndex?'prev':''}} {{index_item==curIssIndex?'cur':''}}">{{index_item+1}}</view>
            </view>
        </scroll-view>
        <view class="tab">
            <view class="item {{curTab==1?'cur':''}}" @tap="tabHandler(1)">推荐题库</view>
            <view class="item {{curTab==2?'cur':''}}" @tap="tabHandler(2)">自定义题</view>
        </view>
        <view class="content">
            <scroll-view class="scroll-view" scroll-y="true">
                <view class="scroll-cont">
                    <view class="iss-list" animation="{{animationData}}">
                        <view class="item" wx:for="{{issueList}}" wx:for-index="issue_index" wx:key="issue_{{issue_index}}" wx:if="{{issue_index==curIssIndex}}">
                            <view hidden="{{curTab!=1}}">
                                <view class="picture">
                                    <image class="img" mode="aspectFit"
                                           src="{{issueList[curIssIndex].question.picURL}}"></image>
                                </view>
                                <view class="qsn-input">
                                    <textarea class="input" placeholder="输入问题" maxlength="35" value="{{issueList[curIssIndex].question.content}}" bindinput="questionInput"></textarea>
                                </view>
                                <view class="aws-input">
                                    <view class="li {{item.isRight?'cur':''}}" wx:for="{{issueList[curIssIndex].answerList}}" wx:for-item="item" wx:for-index="a_index" wx:key="{{item.id}}">
                                        <input class="txt" placeholder="输入答案" maxlength="12" value="{{item.content}}" bindinput="answerInput({{a_index}})"/>
                                        <view class="sub" @tap="setAnswer({{a_index}})">设为正确</view>
                                    </view>
                                </view>
                                <view class="buttons">
                                    <button plain="true" class="btn change-btn" @tap="changeQuestion">换一题</button>
                                    <button plain="true" class="btn confirm-btn {{!issueList[curIssIndex].setRight?'disabled':''}}" disabled="{{!issueList[curIssIndex].setRight}}" @tap="confirmQuestion">
                                        确认
                                    </button>
                                </view>
                            </view>
                            <view hidden="{{curTab!=2}}">
                                <view class="picture" @tap="uploadImage">
                                    <image wx:if="{{issueDiy.question.picURL}}" class="img" src="{{issueDiy.question.picURL}}"></image>
                                    <block wx:else>
                                        <image class="add-img" src="../img/picture-add.png"></image>
                                        <text class="add-desc">添加照片</text>
                                    </block>
                                </view>
                                <view class="qsn-input">
                                    <textarea class="input" placeholder="输入问题" maxlength="35" value="{{issueDiy.question.content}}" bindinput="questionInput"></textarea>
                                </view>
                                <view class="aws-input">
                                    <view class="li {{item.isRight?'cur':''}}" wx:for="{{issueDiy.answerList}}" wx:for-item="item" wx:for-index="a_index" wx:key="diy_{{a_index}}">
                                        <input class="txt" placeholder="{{item.isRight?'输入正确答案':'输入错误答案'}}" maxlength="12" value="{{item.content}}" bindinput="answerInput({{a_index}})"/>
                                    </view>
                                </view>
                                <view class="buttons">
                                    <button plain="true" class="btn add-btn" @tap="confirmQuestion">确定</button>
                                </view>
                            </view>
                        </view>
                    </view>
                </view>
            </scroll-view>
        </view>

    </view>
</template>
<script>
    import wepy from 'wepy'
    import {http, apis} from '../lib/inter.js'
    import utils from '../lib/utils.js'
    import qiniuUploader from '../lib/qiniu/qiniuUploader.js'

    export default class CreateIssue extends wepy.page {
        data = {
            id: 0,
            curTab: 1,
            issueList: [{
                "question": {
                    "id": 1,
                    "content": "我最喜欢那个英雄?",
                    "picURL": "https://si.geilicdn.com/fxx_db42a6c9d-sz_1137216_ee1beae3-260e-4420-8b95-da426af59406.jpg?w=640&h=945",
                    authorUserID: '333'
                },
                "answerList": [{
                    "id": 1,
                    "content": '德玛西亚之力',
                    "isRight": 1
                }, {
                    "id": 2,
                    "content": '孙悟空',
                    "isRight": 0
                }, {
                    "id": 3,
                    "content": '慎',
                    "isRight": 0
                }, {
                    "id": 4,
                    "content": '捶石',
                    "isRight": 0
                }]
            }],
            curIssIndex: 1,
            issueDiy: {
                question: {
                    content: '',
                    picURL: '',
                    authorUserID: wepy.$instance.globalData.userInfo.uid
                },
                answerList: [{
                    content: '',
                    isRight: 1
                }, {
                    content: '',
                    isRight: 0
                }, {
                    content: '',
                    isRight: 0
                }, {
                    content: '',
                    isRight: 0
                }]
            },
            animationData: {},
            uptoken: ''
        }
        computed = {
            indexs(){
                let res = [0, 1, 2, 3, 4];
                if (this.curIssIndex < 4) {
                    return res;
                } else {
                    let diff = this.curIssIndex - 4;
                    return res.map(item=> {
                        return item + diff;
                    });
                }
            }
        }
        methods = {
            tabHandler(num){
                this.curTab = num;

                this.$apply()
            },
            questionInput(e){
                let content = e.detail.value || ''
                if (this.curTab == 1) {
                    this.issueList[this.curIssIndex].question.content = content;
                } else {
                    this.issueDiy.question.content = content;
                }
            },
            answerInput(index, e){
                let content = e.detail.value || ''
                if (this.curTab == 1) {
                    this.issueList[this.curIssIndex].answerList[index].content = content;
                } else {
                    this.issueDiy.answerList[index].content = content;
                }
                this.$apply()
            },
            setAnswer(num){
                this.issueList[this.curIssIndex].answerList.forEach((item, i)=> {
                    if (i == num) {
                        item.isRight = 1;
                    } else {
                        item.isRight = 0;
                    }
                })
                this.issueList[this.curIssIndex].setRight = true;
                this.$apply()
            },
            async changeQuestion(){
                let newIss = await this.getNewIssue();
                if (newIss) {
                    this.issueList[this.issueList.length - 1] = newIss;
                }
            },
            confirmQuestion: utils.debounce(async() => {
                let animation = wx.createAnimation({
                    duration: 300,
                })
                animation.scale(0, 0).step();
                this.animationData = animation.export();
                this.$apply();
                setTimeout(function () {
                    animation.scale(1, 1).step();
                    this.animationData = animation.export();
                    this.$apply();
                }.bind(this), 300)
                let curIssue = this.curTab == 1 ? this.issueList[this.curIssIndex] : this.issueDiy;
                let commitIssue = await this.commitIssue(curIssue);

                if (!commitIssue) {
                    return;
                }
                if (this.curTab == 2) {
                    this.clearIssueDiy();
                }
                if (this.curIssIndex < 4) {
                    this.addQuestion()
                } else {
                    wx.showModal({
                        title: '小提示',
                        content: '没过瘾？你还可以多出几道题刁难大家哟',
                        cancelText: '增加1题',
                        confirmText: '完成出题',
                        success: res => {
                            if (res.confirm) {
                                wx.navigateTo({
                                    url: 'shareRedPack'
                                })
                            } else {
                                this.addQuestion()
                            }
                        }
                    });
                }

            }),
            uploadImage(){
                wx.chooseImage({
                    count: 1,
                    success: res=> {
                        let filePath = res.tempFilePaths[0];
                        qiniuUploader.upload(filePath, (res) => {
                            // 参考http://developer.qiniu.com/docs/v6/api/overview/up/response/simple-response.html
                            this.issueDiy.question.picURL = res.imageURL;
                            this.$apply();
                        }, (error) => {
                            console.log('error: ' + error);
                        }, {
                            region: 'ECN',
                            uploadURL: 'https://up.qbox.me',
                            domain: 'redpackagelite.static.immocha.com/',
                            uptoken: this.uptoken, // 由其他程序生成七牛 uptoken
                        });
                    }
                })
            }

        }

        clearIssueDiy() {
            this.issueDiy = {
                question: {
                    content: '',
                    picURL: '',
                    authorUserID: wepy.$instance.globalData.userInfo.uid
                },
                answerList: [{
                    content: '',
                    isRight: 1
                }, {
                    content: '',
                    isRight: 0
                }, {
                    content: '',
                    isRight: 0
                }, {
                    content: '',
                    isRight: 0
                }]
            }
            this.$apply();
        }

        async addQuestion() {

            this.curTab = 1;
            this.curIssIndex++;
            let newIss = await this.getNewIssue();
            newIss && this.issueList.push(newIss);
            this.$apply();
        }

        async getNewIssue() {
            let newIss;
            let res = await http.post(apis.recommendQuestion, {
                questionID: 0
            }, false, false);
            res = {
                _ok: 1,
                "code": 0,
                "question": {
                    "id": 1,
                    "content": "渴了怎么办?" + parseInt(Math.random() * 1e5),
                    "picURL": "https://si.geilicdn.com/fxx_db42a6c9d-sz_1137216_ee1beae3-260e-4420-8b95-da426af59406.jpg?w=640&h=945",
                    authorUserID: '333'
                },
                "answerList": [{
                    "id": 1,
                    "content": '喝水' + parseInt(Math.random() * 1e5),
                    "isRight": 0
                }, {
                    "id": 2,
                    "content": '喝崂山牌的可口可乐' + parseInt(Math.random() * 1e5),
                    "isRight": 0
                }, {
                    "id": 3,
                    "content": '忍' + parseInt(Math.random() * 1e5),
                    "isRight": 0
                }, {
                    "id": 4,
                    "content": '困了饿了喝香飘飘' + parseInt(Math.random() * 1e5),
                    "isRight": 0
                }]
            }
            if (res._ok) {
                let setRight = res.answerList.some(item=> {
                    return item.isRight;
                })
                newIss = {question: res.question, answerList: res.answerList, setRight: setRight}
            }
            return newIss;
        }

        async commitIssue(curIssue) {
            let res = await http.post(apis.commitQuestion, {
                redPackageID: this.id,
                questionStr: JSON.stringify(curIssue.question),
                answerListStr: JSON.stringify(curIssue.answerList)
            }, false, false);
            return true;
            if (res._ok) {
                return true;
            } else {
                return false;
            }
        }

        async getUptoken() {
            let res = await http.post(apis.qiniuToken)
            if (res._ok) {
                this.uptoken = res.token;
            }
        }

        async onLoad(e) {
            this.id = e.id;
            if (e.recover) {
            } else {
                let newIss = await this.getNewIssue();
                this.issueList.push(newIss);
            }
            this.$apply();
        }

        onShow() {
            this.getUptoken();
        }

    }

</script>
<style lang="less" rel="stylesheet/less">
    .createIssue-page {
        .iss-index {
            white-space: nowrap;
            font-size: 0;
            width: unit(550, rpx);
            height: unit(54, rpx);
            margin: unit(50, rpx) auto;
            overflow-x: hidden;
            .li {
                display: inline-block;
                margin-right: unit(70, rpx);
                &.cur {
                    color: #CD3434;
                    border-color: #CD3434;
                }
                &.ed {
                    color: #CD3434;
                    background: #FFDBDB;
                    border-color: #FFDBDB;
                }
                &:last-child {
                    margin-right: 0;
                }
                .num {
                    display: flex;
                    align-items: center;
                    justify-content: center;
                    box-sizing: border-box;
                    font-size: unit(30, rpx);
                    border: 1px solid #808080;
                    width: unit(54, rpx);
                    height: unit(54, rpx);
                    border-radius: unit(54, rpx);
                    &.cur {
                        border-color: #CD3434;
                        color: #CD3434;
                    }
                    &.prev {
                        border-color: #FFDBDB;
                        color: #CD3434;
                        background: #FFDBDB;
                    }
                }
            }
        }
        .tab {
            display: flex;
            justify-content: space-between;
            height: unit(96, rpx);
            line-height: unit(96, rpx);
            padding: 0 unit(96, rpx);
            background: #FFF;
            margin-bottom: unit(20, rpx);
            .item {
                margin: 0 unit(45, rpx);
                font-size: unit(32, rpx);
                box-sizing: border-box;
                color: #A5A5A5;
                &.cur {
                    color: #CD3434;
                    border-bottom: unit(4, rpx) solid #CD3434;
                }
            }
        }
        .content {
            display: flex;
            box-sizing: border-box;
            flex: 1;
            height: unit(400, rpx);
            background: #FFF;
            .scroll-view {
                display: block;
                flex: 1;
                .scroll-cont {
                    position: relative;
                    padding: unit(44, rpx) unit(96, rpx);
                    .iss-list {
                        width: 100%;
                        overflow: hidden;
                        white-space: nowrap;
                        font-size: 0;
                        .item {
                            display: inline-block;
                            width: unit(558, rpx);
                        }
                    }

                }
            }
            .picture {
                display: flex;
                justify-content: center;
                align-items: center;
                flex-direction: column;
                width: unit(558, rpx);
                height: unit(336, rpx);
                margin: 0 auto;
                background: #FAFAFA;
                .img {
                    width: 100%;
                    height: 100%;
                }
                .add-img {
                    width: unit(70, rpx);
                    height: unit(70, rpx);
                    margin-bottom: unit(26, rpx);
                }
                .add-desc {
                    color: #DEDEDE;
                    font-size: unit(26, rpx);
                }
            }
            .qsn-input {
                margin-top: unit(40, rpx);
                width: 100%;
                border-bottom: 1px solid #DEDEDE;
                .input {
                    font-size: 16px;
                    height: unit(120, rpx);
                    line-height: unit(45, rpx);
                }
                .textarea-placeholder {
                    color: #DEDEDE;
                }
            }
            .aws-input {
                margin-top: unit(40, rpx);
                .li {
                    display: flex;
                    height: unit(84, rpx);
                    padding: unit(18, rpx) 0;
                    box-sizing: border-box;
                    border-bottom: 1px solid #DEDEDE;
                    .txt {
                        font-size: 14px;
                        flex: 1;
                        width: 200px;
                    }
                    .sub {
                        font-size: unit(24, rpx);
                        color: #DEDEDE;
                        width: unit(110, rpx);
                        display: flex;
                        justify-content: flex-end;
                        align-items: center;
                        border-left: unit(1, rpx) solid #DEDEDE;
                    }
                    &.cur {
                        .txt {
                            color: #F49A51;
                        }
                        .sub {
                            color: #F49A51;
                        }
                        .input-placeholder {
                            color: #F49A51;
                        }
                    }
                }
            }
            .buttons {
                margin-top: unit(48, rpx);
                display: flex;
                justify-content: space-between;
                .btn {
                    display: block;
                    width: unit(254, rpx);
                    height: unit(86, rpx);
                    border-radius: unit(86, rpx);
                    line-height: unit(86, rpx);
                    text-align: center;
                    font-size: unit(32, rpx);
                    font-weight: 500;
                    border: 1px solid #CD3434;
                    margin: 0;
                    &.change-btn {
                        color: #CD3434;
                        background: #FFF;
                    }
                    &.confirm-btn {
                        color: #FFF;
                        background: #CD3434;
                        &.disabled {
                            border-color: #DEDEDE;
                            background: #DEDEDE;
                        }
                    }

                    &.add-btn {
                        width: 100%;
                        color: #FFF;
                        background: #CD3434;
                    }
                }

            }
        }
    }
</style>

